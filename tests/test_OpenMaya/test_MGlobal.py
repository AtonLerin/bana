import unittest

import banana.maya
import maya.standalone
from maya import OpenMaya, cmds


maya.standalone.initialize()
banana.maya.patch()


class MGlobalTest(unittest.TestCase):
    
    def test_getFunctionSetFromType(self):
        OpenMaya.MFileIO.newFile(True)
        cmds.group(name='transform', empty=True)
        cmds.polyCube(name='cube')
        cmds.sphere(name='sphere')
        cmds.circle(name='circle')
        cmds.pointLight(name='light')
        
        node = OpenMaya.MDagPath.bnn_get('transform')
        self.assertIs(OpenMaya.MGlobal.bnn_getFunctionSetFromType(node.apiType()), OpenMaya.MFnTransform)
        
        node = OpenMaya.MDagPath.bnn_get('cube').bnn_findShape()
        self.assertIs(OpenMaya.MGlobal.bnn_getFunctionSetFromType(node.apiType()), OpenMaya.MFnMesh)
        
        node = OpenMaya.MDagPath.bnn_get('sphere').bnn_findShape()
        self.assertIs(OpenMaya.MGlobal.bnn_getFunctionSetFromType(node.apiType()), OpenMaya.MFnNurbsSurface)
        
        node = OpenMaya.MDagPath.bnn_get('circle').bnn_findShape()
        self.assertIs(OpenMaya.MGlobal.bnn_getFunctionSetFromType(node.apiType()), OpenMaya.MFnNurbsCurve)
        
        node = OpenMaya.MDagPath.bnn_get('light').bnn_findShape()
        self.assertIs(OpenMaya.MGlobal.bnn_getFunctionSetFromType(node.apiType()), OpenMaya.MFnPointLight)
    
    def test_isValidShortNamePattern(self):
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node1'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('1node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node_1'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('1_node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node1_'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('_1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('no-de'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node?'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node!'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(' node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node '))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(' node '))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(' 1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('::node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(' : node '))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('ns::node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('ns:subns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('ns:'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node|'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node||'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('root||node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('||node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('  root  |  node  '))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('||:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('||ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|root|child|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|root|child|grandchild|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':ns:root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':ns:root|child|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':ns:root|child|grandchild|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':ns:subns:root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':ns:subns:root|child|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':ns:subns:root|child|grandchild|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node->underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node->underworld|'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node->->underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->underworld|'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->||underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|underworld|subnode'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|underworld->moreunderworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|underworld->moreunderworld|child|grandchild'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|underworld->|moreunderworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|underworld->|moreunderworld|child|grandchild'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|root|child|grandchild|node|shape->underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|root|child|grandchild|node|shape->|underworld|child|grandchild'))
        
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('n*de'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*node*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node_*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*_node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node*_'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('_*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':node*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*:*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*:ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('ns:*:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':ns:*:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('ns:*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node|*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|*|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*|node|*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|:ns:*:root|*|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->underworld*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|underworld*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->*underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|*underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->*|child'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->*->moreunderworld'))
        
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node**', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('**node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('n*de', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*1node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*node*', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*1node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node_*', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*_node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node*_', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidShortNamePattern('_*node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':node*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':*node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':**node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('**:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*:*node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*:ns:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('ns:*:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern(':ns:*:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('ns:*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('ns*:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('ns*:', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node|*|', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node|*|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('node|*|*|', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*|node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|*|node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*|*|node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|*|*|node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*|node|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('*|n*de|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|:ns:*:root|*|node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->underworld*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|underworld*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->*underworld', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|*underworld', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->*|child', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|*|child', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->*->moreunderworld', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidShortNamePattern('|node->|*->|moreunderworld', wildcards=True))
    
    def test_isValidNamePattern(self):
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('node1'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('1node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('node_1'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('1_node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('node1_'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('_1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('no-de'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node?'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node!'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(' node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node '))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(' node '))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(' 1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('::node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(' : node '))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('ns::node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('ns:subns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('ns:'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node|'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node||'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('root||node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('||node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('  root  |  node  '))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('||:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('||ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|root|child|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|root|child|grandchild|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':ns:root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':ns:root|child|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':ns:root|child|grandchild|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':ns:subns:root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':ns:subns:root|child|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':ns:subns:root|child|grandchild|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node->underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node->underworld|'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node->->underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->underworld|'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->||underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|underworld|subnode'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|underworld->moreunderworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|underworld->moreunderworld|child|grandchild'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|underworld->|moreunderworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|underworld->|moreunderworld|child|grandchild'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|root|child|grandchild|node|shape->underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|root|child|grandchild|node|shape->|underworld|child|grandchild'))
        
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('n*de'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*node*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node_*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*_node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node*_'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('_*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':node*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*:*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*:ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('ns:*:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':ns:*:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('ns:*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node|*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|*|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*|node|*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|:ns:*:root|*|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->underworld*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|underworld*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->*underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|*underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->*|child'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->*->moreunderworld'))
        
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('node*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node**', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('*node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('**node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('n*de', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('*1node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('*node*', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('*1node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('node_*', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('*_node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('node*_', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('_*node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':node*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':*node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':**node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('*:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('**:node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('*:*node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('*:ns:node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('ns:*:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern(':ns:*:node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('ns:*', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidNamePattern('ns*:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('ns*:', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node|*|', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node|*|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('node|*|*|', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*|node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|*|node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*|*|node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|*|*|node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*|node|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('*|n*de|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|:ns:*:root|*|node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->underworld*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|underworld*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->*underworld', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|*underworld', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->*|child', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|*|child', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->*->moreunderworld', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidNamePattern('|node->|*->|moreunderworld', wildcards=True))
    
    def test_isValidPathPattern(self):
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node1'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node_1'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('1_node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node1_'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('_1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('no-de'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node?'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node!'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(' node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node '))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(' node '))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(' 1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('::node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(' : node '))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('ns::node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('ns:subns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('ns:'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node|'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node||'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('root||node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('  root  |  node  '))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('||node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('||:node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('||ns:node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|root|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|root|child|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|root|child|grandchild|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':ns:root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':ns:root|child|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':ns:root|child|grandchild|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':ns:subns:root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':ns:subns:root|child|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':ns:subns:root|child|grandchild|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node->underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node->underworld|'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node->->underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->underworld|'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->||underworld'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|underworld|subnode'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|underworld->moreunderworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|underworld->moreunderworld|child|grandchild'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|underworld->|moreunderworld'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|underworld->|moreunderworld|child|grandchild'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|root|child|grandchild|node|shape->underworld'))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|root|child|grandchild|node|shape->|underworld|child|grandchild'))
        
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('n*de'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*node*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*1node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node_*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*_node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node*_'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('_*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':node*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*:*node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*:ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('ns:*:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':ns:*:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('ns:*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node|*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|*|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*|node|*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|:ns:*:root|*|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->underworld*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|underworld*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->*underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|*underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->*|child'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->*'))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->*->moreunderworld'))
        
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node**', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('**node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('n*de', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*1node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*node*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*1node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node_*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*_node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node*_', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('_*node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':node*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':*node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':**node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('**:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*:*node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('*:ns:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('ns:*:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern(':ns:*:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('ns:*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('ns*:node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('ns*:', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node|*|', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node|*|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('node|*|*|', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('*|node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|*|node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('*|*|node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|*|*|node', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('*|node|*', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('*|n*de|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|:ns:*:root|*|node', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->underworld*', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|underworld*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->*underworld', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|*underworld', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->*|child', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|*|child', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->*', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|*', wildcards=True))
        self.assertFalse(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->*->moreunderworld', wildcards=True))
        self.assertTrue(OpenMaya.MGlobal.bnn_isValidPathPattern('|node->|*->|moreunderworld', wildcards=True))
    
    def test_normalizeName(self):
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(''), '*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(None), '*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node1'), 'node1')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('1node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node_1'), 'node_1')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('1_node'), '_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node1_'), 'node1_')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('_1node'), '_1node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('no-de'), 'no_de')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node?'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node!'), 'node')
        self.assertTrue(OpenMaya.MGlobal.bnn_normalizeName(' node'), 'node')
        self.assertTrue(OpenMaya.MGlobal.bnn_normalizeName('node '), 'node')
        self.assertTrue(OpenMaya.MGlobal.bnn_normalizeName(' node '), 'node')
        self.assertTrue(OpenMaya.MGlobal.bnn_normalizeName(' 1node'), '_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('::node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(' : node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('ns:node'), 'ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('ns::node'), 'ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('ns:subns:node'), 'ns:subns:node')
        self.assertRaises(ValueError, OpenMaya.MGlobal.bnn_normalizeName, 'ns:')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node|'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node||'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('root|node'), 'root_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('root||node'), 'root__node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('||node'), 'node')
        self.assertTrue(OpenMaya.MGlobal.bnn_normalizeName('  root  |  node  '), 'root|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|:node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('||:node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|ns:node'), 'ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('||ns:node'), 'ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|root|node'), 'root_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|root|child|node'), 'root_child_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|root|child|grandchild|node'), 'root_child_grandchild_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':ns:root|node'), 'ns:root_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':ns:root|child|node'), 'ns:root_child_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':ns:root|child|grandchild|node'), 'ns:root_child_grandchild_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':ns:subns:root|node'), 'ns:subns:root_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':ns:subns:root|child|node'), 'ns:subns:root_child_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':ns:subns:root|child|grandchild|node'), 'ns:subns:root_child_grandchild_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node->underworld'), 'node__underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node->underworld|'), 'node__underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node->->underworld'), 'node____underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->underworld'), 'node__underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->underworld|'), 'node__underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|underworld'), 'node___underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->||underworld'), 'node____underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|underworld|subnode'), 'node___underworld_subnode')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|underworld->moreunderworld'), 'node___underworld__moreunderworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|underworld->moreunderworld|child|grandchild'), 'node___underworld__moreunderworld_child_grandchild')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|underworld->|moreunderworld'), 'node___underworld___moreunderworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|underworld->|moreunderworld|child|grandchild'), 'node___underworld___moreunderworld_child_grandchild')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|root|child|grandchild|node|shape->underworld'), 'root_child_grandchild_node_shape__underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|root|child|grandchild|node|shape->|underworld|child|grandchild'), 'root_child_grandchild_node_shape___underworld_child_grandchild')
        
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node*'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('n*de'), 'n_de')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*1node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*node*'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*1node*'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node_*'), 'node_')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*_node'), '_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node*_'), 'node__')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('_*node'), '__node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':node*'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':*node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*:node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*:*node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*:ns:node'), 'ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('ns:*:node'), 'ns:_:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':ns:*:node'), 'ns:_:node')
        self.assertRaises(ValueError, OpenMaya.MGlobal.bnn_normalizeName, 'ns:*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node|*'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*|node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|*|node'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*|node|*'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|:ns:*:root|*|node'), 'ns:_:root___node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->underworld*'), 'node__underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|underworld*'), 'node___underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->*underworld'), 'node___underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|*underworld'), 'node____underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->*|child'), 'node____child')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->*'), 'node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->*->moreunderworld'), 'node_____moreunderworld')
        
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node*', wildcards=True), 'node*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node**', wildcards=True), 'node*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*node', wildcards=True), '*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('**node', wildcards=True), '*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('n*de', wildcards=True), 'n*de')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*1node', wildcards=True), '*1node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*node*', wildcards=True), '*node*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*1node', wildcards=True), '*1node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node_*', wildcards=True), 'node_*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*_node', wildcards=True), '*_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node*_', wildcards=True), 'node*_')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('_*node', wildcards=True), '_*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':node*', wildcards=True), 'node*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':*node', wildcards=True), '*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':**node', wildcards=True), '*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*:node', wildcards=True), '*:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('**:node', wildcards=True), '*:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*:*node', wildcards=True), '*:*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*:ns:node', wildcards=True), '*:ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('ns:*:node', wildcards=True), 'ns:*:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName(':ns:*:node', wildcards=True), 'ns:*:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('ns:*', wildcards=True), 'ns:*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('ns*:node', wildcards=True), 'ns*:node')
        self.assertRaises(ValueError, OpenMaya.MGlobal.bnn_normalizeName, 'ns*:', wildcards=True)
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node|*', wildcards=True), 'node_*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node|*|', wildcards=True), 'node_*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node|*|*', wildcards=True), 'node_*_*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('node|*|*|', wildcards=True), 'node_*_*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*|node', wildcards=True), '*_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|*|node', wildcards=True), '*_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*|*|node', wildcards=True), '*_*_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|*|*|node', wildcards=True), '*_*_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*|node|*', wildcards=True), '*_node_*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('*|n*de|*', wildcards=True), '*_n*de_*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|:ns:*:root|*|node', wildcards=True), 'ns:*:root_*_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->underworld*', wildcards=True), 'node__underworld*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|underworld*', wildcards=True), 'node___underworld*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->*underworld', wildcards=True), 'node__*underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|*underworld', wildcards=True), 'node___*underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->*|child', wildcards=True), 'node__*_child')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|*|child', wildcards=True), 'node___*_child')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->*', wildcards=True), 'node__*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|*', wildcards=True), 'node___*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->*->moreunderworld', wildcards=True), 'node__*__moreunderworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizeName('|node->|*->|moreunderworld', wildcards=True), 'node___*___moreunderworld')
    
    def test_normalizePath(self):
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(''), '*|*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(None), '*|*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node1'), '*|node1')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('1node'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node_1'), '*|node_1')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('1_node'), '*|_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node1_'), '*|node1_')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('_1node'), '*|_1node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('no-de'), '*|no_de')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node?'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node!'), '*|node')
        self.assertTrue(OpenMaya.MGlobal.bnn_normalizePath(' node'), '*|node')
        self.assertTrue(OpenMaya.MGlobal.bnn_normalizePath('node '), '*|node')
        self.assertTrue(OpenMaya.MGlobal.bnn_normalizePath(' node '), '*|node')
        self.assertTrue(OpenMaya.MGlobal.bnn_normalizePath(' 1node'), '*|_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':node'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('::node'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(' : node'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('ns:node'), '*|ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('ns::node'), '*|ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('ns:subns:node'), '*|ns:subns:node')
        self.assertRaises(ValueError, OpenMaya.MGlobal.bnn_normalizePath, 'ns:')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node|'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node||'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('root|node'), '*|root|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('root||node'), '*|root|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node'), '|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('||node'), '|node')
        self.assertTrue(OpenMaya.MGlobal.bnn_normalizePath('  root  |  node  '), '|root|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|:node'), '|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('||:node'), '|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|ns:node'), '|ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('||ns:node'), '|ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|root|node'), '|root|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|root|child|node'), '|root|child|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|root|child|grandchild|node'), '|root|child|grandchild|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':ns:root|node'), '*|ns:root|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':ns:root|child|node'), '*|ns:root|child|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':ns:root|child|grandchild|node'), '*|ns:root|child|grandchild|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':ns:subns:root|node'), '*|ns:subns:root|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':ns:subns:root|child|node'), '*|ns:subns:root|child|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':ns:subns:root|child|grandchild|node'), '*|ns:subns:root|child|grandchild|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node->underworld'), '*|node->|underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node->underworld|'), '*|node->|underworld')
        self.assertRaises(ValueError, OpenMaya.MGlobal.bnn_normalizePath, 'node->->underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->underworld'), '|node->|underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->underworld|'), '|node->|underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|underworld'), '|node->|underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->||underworld'), '|node->|underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|underworld|subnode'), '|node->|underworld|subnode')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|underworld->moreunderworld'), '|node->|underworld->|moreunderworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|underworld->moreunderworld|child|grandchild'), '|node->|underworld->|moreunderworld|child|grandchild')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|underworld->|moreunderworld'), '|node->|underworld->|moreunderworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|underworld->|moreunderworld|child|grandchild'), '|node->|underworld->|moreunderworld|child|grandchild')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|root|child|grandchild|node|shape->underworld'), '|root|child|grandchild|node|shape->|underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|root|child|grandchild|node|shape->|underworld|child|grandchild'), '|root|child|grandchild|node|shape->|underworld|child|grandchild')
        
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node*'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*node'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('n*de'), '*|n_de')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*1node'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*node*'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*1node*'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node_*'), '*|node_')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*_node'), '*|_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node*_'), '*|node__')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('_*node'), '*|__node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':node*'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':*node'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*:node'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*:*node'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*:ns:node'), '*|ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('ns:*:node'), '*|ns:_:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':ns:*:node'), '*|ns:_:node')
        self.assertRaises(ValueError, OpenMaya.MGlobal.bnn_normalizePath, 'ns:*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node|*'), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*|node'), '|node')
        self.assertRaises(ValueError, OpenMaya.MGlobal.bnn_normalizePath, '|*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*|node|*'), '|node')
        self.assertRaises(ValueError, OpenMaya.MGlobal.bnn_normalizePath, '|:ns:*:root|*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->underworld*'), '|node->|underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|underworld*'), '|node->|underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->*underworld'), '|node->|underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|*underworld'), '|node->|underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->*|child'), '|node->|child')
        self.assertRaises(ValueError, OpenMaya.MGlobal.bnn_normalizePath, '|node->*')
        self.assertRaises(ValueError, OpenMaya.MGlobal.bnn_normalizePath, '|node->*->moreunderworld')
        
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node*', wildcards=True), '*|node*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node**', wildcards=True), '*|node*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*node', wildcards=True), '*|*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('**node', wildcards=True), '*|*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('n*de', wildcards=True), '*|n*de')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*1node', wildcards=True), '*|*1node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*node*', wildcards=True), '*|*node*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*1node', wildcards=True), '*|*1node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node_*', wildcards=True), '*|node_*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*_node', wildcards=True), '*|*_node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node*_', wildcards=True), '*|node*_')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('_*node', wildcards=True), '*|_*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':node*', wildcards=True), '*|node*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':*node', wildcards=True), '*|*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':**node', wildcards=True), '*|*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*:node', wildcards=True), '*|*:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('**:node', wildcards=True), '*|*:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*:*node', wildcards=True), '*|*:*node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*:ns:node', wildcards=True), '*|*:ns:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('ns:*:node', wildcards=True), '*|ns:*:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath(':ns:*:node', wildcards=True), '*|ns:*:node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('ns:*', wildcards=True), '*|ns:*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('ns*:node', wildcards=True), '*|ns*:node')
        self.assertRaises(ValueError, OpenMaya.MGlobal.bnn_normalizePath, 'ns*:', wildcards=True)
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node|*', wildcards=True), '*|node|*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node|*|', wildcards=True), '*|node|*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node|*|*', wildcards=True), '*|node|*|*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('node|*|*|', wildcards=True), '*|node|*|*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*|node', wildcards=True), '*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|*|node', wildcards=True), '|*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*|*|node', wildcards=True), '*|*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|*|*|node', wildcards=True), '|*|*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*|node|*', wildcards=True), '*|node|*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('*|n*de|*', wildcards=True), '*|n*de|*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|:ns:*:root|*|node', wildcards=True), '|ns:*:root|*|node')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->underworld*', wildcards=True), '|node->|underworld*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|underworld*', wildcards=True), '|node->|underworld*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->*underworld', wildcards=True), '|node->|*underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|*underworld', wildcards=True), '|node->|*underworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->*|child', wildcards=True), '|node->|*|child')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|*|child', wildcards=True), '|node->|*|child')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->*', wildcards=True), '|node->|*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|*', wildcards=True), '|node->|*')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->*->moreunderworld', wildcards=True), '|node->|*->|moreunderworld')
        self.assertEqual(OpenMaya.MGlobal.bnn_normalizePath('|node->|*->|moreunderworld', wildcards=True), '|node->|*->|moreunderworld')
    
    def test_matchPath(self):
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|node', '|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|*node', '|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|node*', '|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|n*de*', '|n0de'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('*|*', '|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_matchPath('|*node', '|root|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('*|node', '|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('*|node', '|root|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('*|node', '|root|child|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('*|node', '|root|child|grandchild|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|root|node', '|root|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('*|root|node', '|root|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|root*|*node', '|root|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|root|*', '|root|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|*|node', '|root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_matchPath('|*node', '|root|node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_matchPath('|*|node', '|root|child|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|*|*|node', '|root|child|node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|ns:node', '|ns:node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|*:node', '|ns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_matchPath('|*:node', '|ns:subns:node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|*:*:node', '|ns:subns:node'))
        self.assertFalse(OpenMaya.MGlobal.bnn_matchPath('*|*', '|ns:node'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|node->|underworld', '|node->|underworld'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|*->|underworld', '|node->|underworld'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|*->|*', '|node->|underworld'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|root|node|shape->|underworld|child->|moreunderworld', '|root|node|shape->|underworld|child->|moreunderworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_matchPath('|root|node|shape->|*->|moreunderworld', '|root|node|shape->|underworld|child->|moreunderworld'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|root|*|shape->|*|*->|*', '|root|node|shape->|underworld|child->|moreunderworld'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|*:*:node|*->|underworld', '|ns:subns:node|shape->|underworld'))
        self.assertTrue(OpenMaya.MGlobal.bnn_matchPath('|node->|*', '|node->|underworld'))
        self.assertFalse(OpenMaya.MGlobal.bnn_matchPath('|node->|*', '|node->|underworld|child'))
        self.assertFalse(OpenMaya.MGlobal.bnn_matchPath('|node->|*', '|node->|underworld|ns:child'))


if __name__ == '__main__':
    unittest.main()
